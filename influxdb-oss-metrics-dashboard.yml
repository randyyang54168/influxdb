apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
    name: influxdb-oss-metrics
spec:
    charts:
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: host
            fieldName: host
            visible: true
          - displayName: id
            fieldName: id
            visible: true
          - displayName: url
            fieldName: url
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: Hours
            fieldName: Hours
            visible: true
          - displayName: Instance ID
            fieldName: Instance ID
            visible: true
          - displayName: Uptime Hours
            fieldName: Uptime Hours
            visible: true
        height: 3
        kind: Table
        name: Uptime
        queries:
          - query: |-
                import "math"
 
                from(bucket: "oss_metrics")
                    |> range(start:v.timeRangeStart, stop: v.timeRangeStop)
                    |> filter(fn: (r) =>r._measurement == "influxdb_uptime_seconds")
                    |> filter(fn:(r) => r._field == "gauge")
                    |> last()
                    |> drop(columns:[
                        "_start",
                        "_stop",
                        "_time",
                        "_measurement",
                        "_field",
                        "url",
                    ])
                    |> map(fn: (r)=> ({r with _value: math.round(x: float(v: r._value) / 60.0 / 60.0* 100.0) / 100.0}))
                    |> group()
                    |> rename(columns: {host:"Host", _value: "Uptime Hours", id: "Instance ID"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 4
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: host
            fieldName: host
            visible: true
          - displayName: url
            fieldName: url
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
        height: 2
        kind: Table
        name: Organizations
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_organizations_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Orgs"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        yPos: 3
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: '# of Telegraf Configs'
            fieldName: '# of Telegraf Configs'
            visible: true
        height: 2
        kind: Table
        name: Telegraf Configs
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_telegrafs_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Telegraf Configs"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        yPos: 5
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        colors:
          - hex: '#31C0F6'
            id: 2df496c5-614d-4d42-8590-0bf106d711e7
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            id: 817fd4b1-56fd-4687-a93a-b8659677796b
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            id: 64e7fa3e-3633-4992-8296-2f8fe8ea84c7
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 5
        hoverDimension: auto
        kind: Xy
        legendColorizeRows: true
        legendOpacity: 1
        legendOrientationThreshold: 1e+08
        name: Local Object Store Reads
        position: overlaid
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "boltdb_reads_total")
                  |> derivative(unit: 1s, nonNegative: true)
                  |> drop(columns: ["url", "_measurement"])
        staticLegend: {}
        width: 6
        xCol: _time
        yCol: _value
        yPos: 7
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        colors:
          - hex: '#31C0F6'
            id: 519954ff-d935-42f0-b016-f2dacd0614d9
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            id: a8672357-f006-4aa4-a7d3-0e30229cb218
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            id: e5020d9e-cbf3-47ed-b8a4-e9def5c6e9ba
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 4
        hoverDimension: auto
        kind: Xy
        legendColorizeRows: true
        legendOpacity: 1
        legendOrientationThreshold: 1e+08
        name: Query Requests
        position: overlaid
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "http_api_requests_total")
                  |> filter(fn: (r) => r.path == "/api/v2/query")
                  |> derivative(unit: 1s, nonNegative: true)
        staticLegend: {}
        width: 12
        xCol: _time
        yCol: _value
        yPos: 12
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        geom: line
        height: 3
        kind: Xy
        name: Memory Allocations (Bytes)
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "go_memstats_alloc_bytes_total")
                  |> derivative(unit: 1s, nonNegative: true)
        staticLegend: {}
        width: 4
        xCol: _time
        yCol: _value
        yPos: 16
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: '# of Users'
            fieldName: '# of Users'
            visible: true
        height: 2
        kind: Table
        name: Users
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_users_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Users"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 3
        yPos: 3
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: '# of Dashboards'
            fieldName: '# of Dashboards'
            visible: true
        height: 2
        kind: Table
        name: Dashboards
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_dashboards_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Dashboards"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 3
        yPos: 5
      - colors:
          - hex: '#00C9FF'
            name: laser
            type: text
        fieldOptions:
          - displayName: Architecture
            fieldName: Architecture
            visible: true
          - displayName: Build Date
            fieldName: Build Date
            visible: true
          - displayName: Github Commit
            fieldName: Github Commit
            visible: true
          - displayName: CPUs
            fieldName: CPUs
            visible: true
          - displayName: OS
            fieldName: OS
            visible: true
          - displayName: Version
            fieldName: Version
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: host
            fieldName: host
            visible: true
          - displayName: url
            fieldName: url
            visible: true
          - displayName: le
            fieldName: le
            visible: true
          - displayName: method
            fieldName: method
            visible: true
          - displayName: arch
            fieldName: arch
            visible: true
          - displayName: build_date
            fieldName: build_date
            visible: true
          - displayName: commit
            fieldName: commit
            visible: true
          - displayName: cpus
            fieldName: cpus
            visible: true
          - displayName: os
            fieldName: os
            visible: true
          - displayName: version
            fieldName: version
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
        height: 3
        kind: Table
        name: Instance Info
        note: This cell gives you information about your running instance of InfluxDB
            2, but you probably already knew that.
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_info")
                  |> last()
                  |> group()
                  |> drop(columns: ["_start", "_stop","_time","_field","_value","_measurement"])
                  |> rename(columns: {host: "Host", url: "URL", arch: "Architecture", build_date: "Build Date", commit: "Github Commit", cpus: "CPUs", os: "OS", version: "Version"})
        staticLegend: {}
        tableOptions:
            fixFirstColumn: true
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 8
        xPos: 4
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        colors:
          - hex: '#31C0F6'
            id: 1e40d1f8-5ef8-4de8-b6d3-8b72ef56edde
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            id: f0321a25-31ce-43a6-8411-b894293ace66
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            id: d2f7a375-d96a-444b-ab7e-f65f2ed9d57d
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        hoverDimension: auto
        kind: Xy
        legendColorizeRows: true
        legendOpacity: 1
        legendOrientationThreshold: 1e+08
        name: Memory Usage (%)
        position: overlaid
        queries:
          - query: |-
                bytes_used = from(bucket: "oss_metrics")
                    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                    |> filter(fn: (r) => r._measurement == "go_memstats_alloc_bytes")
                    |> drop(columns: ["_start", "_stop"])

                total_bytes = from(bucket: "oss_metrics")
                    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                    |> filter(fn: (r) => r._measurement == "go_memstats_sys_bytes")
                    |> drop(columns: ["_start", "_stop"])

                join(tables: {key1: bytes_used, key2: total_bytes}, on: ["_time", "host"], method: "inner")
                    |> map(
                        fn: (r) => ({
                            _time: r._time,
                            host: r.host,
                            _value: float(v: r._value_key1) / float(v: r._value_key2) * 100.0,
                            _field: "Memory Usage Percent",
                        }),
                    )
        staticLegend: {}
        width: 4
        xCol: _time
        xPos: 4
        yCol: _value
        yPos: 16
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: '# of Buckets'
            fieldName: '# of Buckets'
            visible: true
        height: 2
        kind: Table
        name: Buckets (Including System)
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_buckets_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Buckets"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 6
        yPos: 3
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: '# of Scrapers'
            fieldName: '# of Scrapers'
            visible: true
        height: 2
        kind: Table
        name: Scrapers
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_scrapers_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Scrapers"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 6
        yPos: 5
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        colors:
          - hex: '#31C0F6'
            id: 2df496c5-614d-4d42-8590-0bf106d711e7
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            id: 817fd4b1-56fd-4687-a93a-b8659677796b
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            id: 64e7fa3e-3633-4992-8296-2f8fe8ea84c7
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 5
        hoverDimension: auto
        kind: Xy
        legendColorizeRows: true
        legendOpacity: 1
        legendOrientationThreshold: 1e+08
        name: Local Object Store Writes
        position: overlaid
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "boltdb_writes_total")
                  |> derivative(unit: 1s, nonNegative: true)
                  |> drop(columns: ["url", "_measurement"])
        staticLegend: {}
        width: 6
        xCol: _time
        xPos: 6
        yCol: _value
        yPos: 7
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: "y"
            scale: linear
        colors:
          - hex: '#31C0F6'
            id: 1e40d1f8-5ef8-4de8-b6d3-8b72ef56edde
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            id: f0321a25-31ce-43a6-8411-b894293ace66
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            id: d2f7a375-d96a-444b-ab7e-f65f2ed9d57d
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        hoverDimension: auto
        kind: Xy
        legendColorizeRows: true
        legendOpacity: 1
        legendOrientationThreshold: 1e+08
        name: Memory Allocs & Frees (Bytes)
        position: overlaid
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "go_memstats_mallocs_total" or r._measurement == "go_memstats_frees_total")
                  |> derivative(unit: 1s, nonNegative: false)
        staticLegend: {}
        width: 4
        xCol: _time
        xPos: 8
        yCol: _value
        yPos: 16
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: '# of Orgs'
            fieldName: '# of Orgs'
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
          - displayName: URL
            fieldName: URL
            visible: true
          - displayName: '# of Tokens'
            fieldName: '# of Tokens'
            visible: true
        height: 2
        kind: Table
        name: Tokens
        queries:
          - query: |-
                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "influxdb_tokens_total")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Tokens"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 9
        yPos: 3
      - colors:
          - hex: '#ffffff'
            id: base
            name: white
            type: text
        fieldOptions:
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: status
            fieldName: status
            visible: true
          - displayName: task_type
            fieldName: task_type
            visible: true
          - displayName: '# of Task Runs'
            fieldName: '# of Task Runs'
            visible: true
          - displayName: Host
            fieldName: Host
            visible: true
        height: 2
        kind: Table
        name: Successful Task Runs
        queries:
          - query: |-
                import "csv"

                from(bucket: "oss_metrics")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "task_executor_total_runs_complete")
                  |> filter(fn: (r) => r.status == "success")
                  |> filter(fn: (r) => r.task_type == "system")
                  |> last()
                  |> drop(columns: ["_start", "_stop","_time","_measurement", "_field", "url"])
                  |> group()
                  |> rename(columns: {host: "Host", _value: "# of Task Runs"})
        staticLegend: {}
        tableOptions:
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 9
        yPos: 5
    description: A collection of useful visualizations for monitoring your local InfluxDB
        2.0 OSS instance.
    name: InfluxDB OSS Metrics